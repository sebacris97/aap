# -*- coding: utf-8 -*-
"""PERCEPTRON_AND_enClase.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CAXZ588Oamu9rtE0ItqepjPjUVIo2zAl
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
#from matplotlib import pyplot as plt
from matplotlib import pylab as plt
from grafica import *

# Ejemplos de entrada de la función AND
X = np.array([[0,0], [0,1],[1,0],[1,1]])

#-- Respuesta esperada para cada ejemplo
T = np.array([0,0,0,1])

# -- PESOS INICIALES - Determinan la ubicación de la recta
W = np.array([-1.0, 1.0])
b = 0.2

print("W = ", W)
print("b = ", b)

dibuPtosRecta(X,T, W, b)

# --- titulos y ph se utilizan sólo para dibujar ---
titulos = ['X1', 'X2']
ph=0

#--- parámetros del PERCEPTRON ---
MAX_ITE = 100
alfa = 0.1

#--- Los pesos iniciales son aleatorios
W = np.array(np.random.uniform(-0.5, 0.5, size=2))
b = np.random.uniform(-0.5, 0.5)

#--- al finalizar ERRORES debe contener la cantidad de cambios realizados en c/iteración ---
errores = []

# --- Entrenamiento del PERCEPTRON ---

print("W = ", W)
print("b = ", b)

plt.plot(range(1, len(errores) + 1), errores, marker='o')
plt.xlabel('Iteraciones')
plt.ylabel('Cantidad de actualizaciones')
plt.show()
